#!/bin/bash

. "{{ joinPath .chezmoi.sourceDir "scripts/utils" }}"
. "{{ joinPath .chezmoi.sourceDir "scripts/utils_install" }}"

# Show a nice header
show_header "ðŸš€ Package Installation Setup" "This script will install and configure your development environment."

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Install core dependencies first
show_bold_message "ðŸ“¦ Installing core dependencies..." "$GREEN"

install_homebrew
install_gum

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

print_in_purple "ðŸŽ¯ Ready to install packages"

ask_for_confirmation "Would you like to continue? This may take some time."
if ! answer_is_yes; then
    show_message "ðŸ‘‹ Installation cancelled. Run this script again when ready!" "$ORANGE"
    exit
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ask_for_sudo

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Core package managers
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Install core package managers and dotfiles manager
install_chezmoi
install_brew_packages
install_rust

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Language-specific packages
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

show_section "ðŸ“š Installing Language-Specific Packages" "$YELLOW"

# BUN packages
BUN_PACKAGES=(
    "@sourcegraph/amp"
    # "@anthropic-ai/claude-code" only once, then local install
    ccusage
    "npm-check"
)

install_packages_from_list "BUN" "install_bun_package" "${BUN_PACKAGES[@]}"

# Go packages
GO_PACKAGES=(
    "github.com/cosmos72/gomacro@latest:gomacro"
)

print_in_purple "Go packages\n"
for package in "${GO_PACKAGES[@]}"; do
    IFS=':' read -r pkg_path pkg_name <<<"$package"
    install_go_package "$pkg_path" "${pkg_name:-$(basename "$pkg_path")}"
done

# UV tools
UV_TOOLS=(
    "gitingest"
)

install_packages_from_list "UV" "install_uv_tool" "${UV_TOOLS[@]}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Tools and plugins
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

show_section "ðŸ”§ Installing Tools and Plugins" "$CYAN"

# GitHub CLI plugins
if setup_github_cli; then
    GH_PLUGINS=(
        "dlvhdr/gh-dash"
        "github/gh-copilot"
    )

    print_in_purple "GH plugins\n"
    for plugin in "${GH_PLUGINS[@]}"; do
        install_gh_plugin "$plugin"
    done
fi

# Yazi file manager plugins
YAZI_PLUGINS=(
    "yazi-rs/plugins:toggle-pane"
    "yazi-rs/plugins:smart-filter"
    "yazi-rs/plugins:diff"
    "yazi-rs/plugins:git"
    "ndtoan96/ouch"
)

install_yazi_plugins "${YAZI_PLUGINS[@]}"

# Install Magic from Modular
install_magic

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Completion
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

show_completion "ðŸŽ‰ Package Installation Complete!" "All packages have been successfully installed." "Your development environment is now ready to use."
