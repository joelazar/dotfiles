#!/bin/bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Note functions

qn() {
  echo "$1" >>$HOME/notes/quicknotes.md
}

n() {
  $EDITOR $HOME/notes/"$*".md
}

nls() {
  ls -c $HOME/notes/ | grep "$*"
}

rgv() {
  CHOICE=$(rg $* | fzf -0 -1 --ansi)
  if [ ! -z "$CHOICE" ]; then
    nvim $(echo "$CHOICE" | awk 'BEGIN { FS=":" } { printf "+%d %s\n", $2, $1 } ') +"Rg $*"
  fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Extract archives
# usage: ex <file>

extract() {
  if [ -f $1 ]; then
    case $1 in
    *.tar.bz2) tar xjf $1 ;;
    *.tar.gz) tar xzf $1 ;;
    *.bz2) bunzip2 $1 ;;
    *.rar) unrar x $1 ;;
    *.gz) gunzip $1 ;;
    *.tar) tar xf $1 ;;
    *.tbz2) tar xjf $1 ;;
    *.tgz) tar xzf $1 ;;
    *.zip) unzip $1 ;;
    *.Z) uncompress $1 ;;
    *.7z) 7z x $1 ;;
    *) echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Docker functions

function cleandocker() {
  if [ -z "$1" ]; then
    echo "No param given, I guess you do not want to delete all your containers. :)"
    return
  fi
  for i in $(docker images | sed '1d' | grep "$1" | awk '{print $3}'); do
    echo ${i}
    docker rmi -f ${i}
  done
}

function cleannone() { docker rmi $(docker images | grep "<none>" | awk '{print $3}'); }

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# SSH functions

function start_agent() {
  echo "Initialising new SSH agent..."
  /usr/bin/ssh-agent | sed 's/^echo/#echo/' >"${SSH_ENV}"
  echo succeeded
  chmod 600 "${SSH_ENV}"
  . "${SSH_ENV}" >/dev/null
  /usr/bin/ssh-add $HOME/.ssh/id_rsa
}
