#!/bin/zsh

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Oh-My-Zsh config

export ZSH="$HOME/.oh-my-zsh"

# ZSH_THEME="avit"
ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
  dotenv
  encode64
  extract
  fzf
  golang
  gitfast
  httpie
  kubectl
  ripgrep
  pip
  urltools
  sudo
  tmux
  web-search
  vi-mode
  z
  # zsh-completions
  # zsh-autosuggestions
  zsh-syntax-highlighting)

# autoload -U compinit && compinit
source $ZSH/oh-my-zsh.sh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh


### Fix slowness of pastes with zsh-syntax-highlighting.zsh
pasteinit() {
  OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
  zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?
}

pastefinish() {
  zle -N self-insert $OLD_SELF_INSERT
}
zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish

source $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Source files

source $HOME/.zsh_aliases
source $HOME/.zsh_exports
source $HOME/.zsh_functions
source $HOME/.zsh.local

source /usr/share/bash-completion/completions/azure-cli
source /usr/share/bash-completion/completions/fd
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh
source $HOME/.local/share/chezmoi.zsh

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
  . "${SSH_ENV}" >/dev/null
  ps ${SSH_AGENT_PID} >/dev/null || {
    start_agent
  }
else
  start_agent
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Fix keybindings in zsh

typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Delete]=${terminfo[kdch1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

[[ -n "${key[Home]}"     ]] && bindkey "${key[Home]}"     beginning-of-line
[[ -n "${key[End]}"      ]] && bindkey "${key[End]}"      end-of-line
[[ -n "${key[Delete]}"   ]] && bindkey "${key[Delete]}"   delete-char
[[ -n "${key[PageUp]}"   ]] && bindkey "${key[PageUp]}"   beginning-of-buffer-or-history
[[ -n "${key[PageDown]}" ]] && bindkey "${key[PageDown]}" end-of-buffer-or-history

[[ -n "${key[Home]}"     ]] && bindkey -M vicmd "${key[Home]}"     beginning-of-line
[[ -n "${key[End]}"      ]] && bindkey -M vicmd "${key[End]}"      end-of-line
[[ -n "${key[Delete]}"   ]] && bindkey -M vicmd "${key[Delete]}"   delete-char
[[ -n "${key[PageUp]}"   ]] && bindkey -M vicmd "${key[PageUp]}"   beginning-of-buffer-or-history
[[ -n "${key[PageDown]}" ]] && bindkey -M vicmd "${key[PageDown]}" end-of-buffer-or-history

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Start graphical server on tty1 if not already running.

if [[ "$(tty)" = /dev/tty1 ]] && [[ -z $(pgrep sway) ]]; then
  exec sway
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
