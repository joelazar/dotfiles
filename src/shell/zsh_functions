#!/bin/zsh

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Note functions

qn() {
  echo "$1" >>$HOME/notes/quicknotes.md
}

n() {
  $EDITOR $HOME/notes/"$*".md
}

nls() {
  ls -c $HOME/notes/ | grep "$*"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Ripgrep search on steroids

rgv() {
  CHOICE=$(rg $* | fzf -0 -1 --ansi)
  if [ ! -z "$CHOICE" ]; then
    nvim $(echo "$CHOICE" | awk 'BEGIN { FS=":" } { printf "+%d %s\n", $2, $1 } ') +"Rg $*"
  fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Docker functions

function cleandocker() {
  if [ -z "$1" ]; then
    echo "No param given, I guess you do not want to delete all your containers. :)"
    return
  fi
  for i in $(docker images | sed '1d' | grep "$1" | awk '{print $3}'); do
    echo ${i}
    docker rmi -f ${i}
  done
}

function cleannone() { docker rmi $(docker images | grep "<none>" | awk '{print $3}'); }

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# SSH functions

function start_agent() {
  echo "Initialising new SSH agent..."
  /usr/bin/ssh-agent | sed 's/^echo/#echo/' >"${SSH_ENV}"
  echo succeeded
  chmod 600 "${SSH_ENV}"
  . "${SSH_ENV}" >/dev/null
  /usr/bin/ssh-add $HOME/.ssh/id_rsa
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# nnn - Cd on quit

n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, remove the "export" as in:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    # NOTE: NNN_TMPFILE is fixed, should not be modified
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn -cd "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}
