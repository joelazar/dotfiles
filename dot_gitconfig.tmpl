[user]

    # Specify the email address of the author/committer.
    email = "{{ .email }}"

    # Specify the username of the author/committer.
    name = "{{ .name }}"

[alias]

    a    = commit --amend
    br   = branch --list --remote
    c    = commit
    ca   = !git add -A && gitmoji -c             # Commit all changes.
    cl   = clean -fxd
    co   = checkout
    cp   = cherry-pick
    d    = diff
    dc   = diff --cached
    f    = fetch --prune
    hash = rev-parse HEAD
    lc   = shortlog --email --numbered --summary --no-merges # List contributors.
    lg   = log --graph --date=relative --pretty=format:'%C(bold blue)%h%C(reset) - %C(green)(%ar) %C(white)%s %C(dim white) [%an] %C(bold yellow)%d'
    lgall= log --all --graph --date=relative --pretty=format:'%C(bold blue)%h%C(reset) - %C(green)(%ar) %C(white)%s %C(dim white) [%an] %C(bold yellow)%d'
    lh   = log -p -10                            # Show custom log.
    p    = pull
    res  = reset --hard HEAD
    rlc  = reset --hard HEAD~1                   # Remove last commit.
    s    = status
    sres = reset --soft HEAD~1                   # Undo last commit.
    sub  = submodule update --init --recursive

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Find commits by source code.

    cc = "!f() { \
        git log --pretty=custom --decorate --date=short -S\"$1\"; \
    }; f"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Find commits by commit message.

    cm = "!f() { \
        git log --pretty=custom --decorate --date=short --grep=\"$1\"; \
    }; f"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # List remote branches.

    lrb = "!f() { \
        remote="${1:-origin}"; \
        git ls-remote --heads "$remote"; \
    }; f"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[mergetool]

    prompt = false
    keepBackup = false

[mergetool "nvim"]

    cmd = nvim -f -c DiffviewOpen

[difftool]

    prompt = false

[difftool "nvim"]

    # TODO: not working
    cmd = nvim -f -c DiffviewOpen

[diff]

    colorMoved = default
    tool = nvim

[merge]

    conflictstyle = diff3
    tool = nvim

[color]

    ui = true

[color "branch"]

    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]

    meta = yellow
    frag = magenta bold
    old = red bold
    new = green bold
    commit = yellow bold
    whitespace = red reverse

[color "status"]

    added = yellow
    changed = green
    untracked = cyan

[color "diff-highlight"]

    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22

[core]

    abbrev = 12
    attributesfile = ~/.gitattributes
    editor = nvim
    excludesfile = ~/.gitignore
    eol = lf
    autocrlf = false
    fileMode = false
    pager = delta

[pager]

    diff = delta
    log = delta
    reflog = delta
    show = delta

[interactive]

    diffFilter = delta --color-only

[delta]

    ; features = line-numbers decorations
    ; whitespace-error-style = 22 reverse
    ; syntax-theme = zenburn
    navigate = true
    light = false
    true-color = always
    ; side-by-side = true

[diff "bin"]

    # Use `hexdump` to diff binary files.

    textconv = hexdump -v -C

[pretty]

    custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
    #                     │        │            │            │             └─ author name
    #                     │        │            │            └─ message
    #                     │        │            └─ date (relative)
    #                     │        └─ decorations (branch, heads or tags)
    #                     └─ hash (abbreviated)

[push]

    # Make `git push` automatically push relevant
    # annotated tags when pushing branches out.

    default = simple
    followTags = true

[user]

    # Don't guess the user's identity.
    # https://github.com/git/git/blob/90f7b16b3adc78d4bbabbd426fb69aa78c714f71/Documentation/config.txt#L2847-L2855

    useConfigOnly = true

[url "git@github.com:"]

    insteadOf = https://github.com/

[pull]

    rebase = false

[filter "lfs"]

    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f

[credential "https://github.com"]

    helper = 
    helper = !/usr/bin/gh auth git-credential

[credential "https://gist.github.com"]

    helper = 
    helper = !/usr/bin/gh auth git-credential

