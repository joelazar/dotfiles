{
  "file_scan_exclusions": [
    "**/.DS_Store",
    "**/.classpath",
    "**/.git",
    "**/.hg",
    "**/.obsidian",
    "**/.settings",
    "**/.svn",
    "**/CVS",
    "**/Thumbs.db",
    // "**/node_modules",
    "**/report"
  ],
  "inline_completions": {
    "disabled_globs": ["", "**/.*"]
  },
  "language_models": {
    "openai": { "version": "1", "available_models": [] },
    "anthropic": { "version": "1", "available_models": [] },
    "copilot_chat": { "available_models": [] },
    "google": { "available_models": [] },
    "deepseek": {
      "api_url": "https://api.deepseek.com",
      "available_models": [
        {
          "name": "deepseek-chat",
          "display_name": "DeepSeek Chat",
          "max_tokens": 64000
        },
        {
          "name": "deepseek-reasoner",
          "display_name": "DeepSeek Reasoner",
          "max_tokens": 64000,
          "max_output_tokens": 4096
        }
      ]
    },
    "zed.dev": { "available_models": [] },
    "ollama": {
      "low_speed_timeout_in_seconds": 120,
      "available_models": [
        {
          "provider": "ollama",
          "name": "qwen2.5-coder:14b",
          "display_name": "qwen2.5-coder",
          "max_tokens": 128000
        },
        {
          "provider": "ollama",
          "name": "phi4",
          "display_name": "phi4",
          "max_tokens": 16000
        }
      ]
    }
  },
  "slash_commands": {
    "docs": { "enabled": true },
    "project": { "enabled": true }
  },
  "calls": {
    "mute_on_join": true,
    "share_on_join": false
  },
  "features": {
    "inline_completion_provider": "copilot"
  },
  "centered_layout": {
    "left_padding": 0.15,
    "right_padding": 0.15
  },
  "seed_search_query_from_cursor": "selection",
  "assistant": {
    "button": false,
    "version": "2",
    "dock": "right",
    "default_width": 640,
    "default_height": 320,
    "enable_experimental_live_diffs": true,
    "default_model": {
      "provider": "zed.dev",
      "model": "claude-3-5-sonnet-latest"
    }
  },
  // "scrollbar": { "show": "never" },
  "tab_bar": {
    "show": true,
    "show_nav_history_buttons": false,
    "show_tab_bar_buttons": false
  },
  "project_panel": {
    "dock": "left",
    "auto_fold_dirs": false,
    "button": false,
    "auto_reveal_entries": false,
    "entry_spacing": "standard"
  },
  "outline_panel": {
    "button": false,
    "dock": "right"
  },
  "collaboration_panel": {
    "button": false
  },
  "chat_panel": {
    "button": "never"
  },
  "notification_panel": {
    "button": false
  },
  "tabs": {
    "git_status": true,
    "close_position": "right",
    "file_icons": true,
    "activate_on_close": "neighbour"
  },
  "file_finder": {
    "modal_max_width": "medium"
  },
  "active_pane_modifiers": {
    "inactive_opacity": 0.6,
    "border_size": 0.5
  },
  // "soft_wrap": "preferred_line_length",
  "preferred_line_length": 140,
  // "wrap_guides": [120],
  "show_wrap_guides": true,
  "auto_signature_help": false,
  "ui_font_size": 13,
  "buffer_font_size": 12.0,
  "vim_mode": true,
  "theme": "Tokyo Night",
  "icon_theme": "VSCode Icons (Dark)",
  "buffer_font_family": "FiraCode Nerd Font",
  "cursor_blink": false,
  // prevent the buffer from scrolling beyond the last line
  "scroll_beyond_last_line": "off",
  // allow cursor to reach edges of screen
  "vertical_scroll_margin": 0,
  "inlay_hints": {
    "enabled": true
  },
  // "gutter": {
  //   // disable line numbers completely:
  //   "line_numbers": false
  // },
  "vim": {
    "toggle_relative_line_numbers": false,
    "use_system_clipboard": "never",
    "use_multiline_find": true,
    "use_smartcase_find": true,
    "highlight_on_yank_duration": 500
  },
  "use_smartcase_search": true,
  "toolbar": {
    "breadcrumbs": true,
    "quick_actions": false,
    "selections_menu": true
  },
  "terminal": {
    "toolbar": { "breadcrumbs": false },
    "line_height": "standard",
    "button": false,
    "max_scroll_history_lines": 30000,
    "blinking": "off",
    "font_family": "FiraCode Nerd Font",
    "font_features": {
      "liga": true,
      "ss02": true,
      "ss03": true,
      "ss05": true,
      "ss07": true
    },
    "detect_venv": {
      "on": {
        "directories": [".env", "env", ".venv", "venv"],
        "activate_script": "fish"
      }
    },
    "env": {
      "GIT_EDITOR": "zed --wait"
    },
    "working_directory": "current_project_directory"
  },
  "load_direnv": "shell_hook",
  "file_types": {
    "Dockerfile": ["Dockerfile*"],
    "Ansible": [
      "**.ansible.yml",
      "**/defaults/**.yml",
      "**/defaults/**.yaml",
      "**/meta/**.yml",
      "**/meta/**.yaml",
      "**/tasks/**.yml",
      "**/tasks/*.yml",
      "**/tasks/*.yaml",
      "**/handlers/*.yml",
      "**/handlers/*.yaml",
      "**/group_vars/**.yml",
      "**/group_vars/**.yaml",
      "**playbook*.yaml",
      "**playbook*.yml"
    ]
  },
  "lsp": {
    "basedpyright": {
      "settings": {
        "python": {
          "pythonPath": ".venv/bin/python",
          "analysis": {
            "diagnosticSeverityOverrides": {
              "reportAny": "none",
              "reportMissingParameterType": "none",
              "reportMissingTypeArgument": "none",
              "reportMissingTypeStubs": "none",
              "reportUnknownArgumentType": "none",
              "reportUnknownLambdaType": "none",
              "reportUnknownMemberType": "none",
              "reportUnknownParameterType": "none",
              "reportUnknownVariableType": "none"
            }
          }
        }
      }
    },
    "typos": {
      "initialization_options": {
        // Path to your typos config file, .typos.toml by default.
        "config": ".typos.toml",
        // Path to your typos-lsp executable, takes $PATH into account.
        "path": "typos-lsp",
        // Diagnostic severity within Zed. "Error" by default, can be:
        // "Error", "Hint", "Information", "Warning"
        "diagnosticSeverity": "Error",
        // Minimum logging level for the LSP, displayed in Zed's logs. "info" by default, can be:
        // "debug", "error", "info", "off", "trace", "warn"
        "logLevel": "info",
        // Traces the communication between ZED and the language server. Recommended for debugging only. "off" by default, can be:
        // "messages", "off", "verbose"
        "trace.server": "off"
      }
    },
    "ansible-language-server": {
      "settings": {
        "ansible": {
          "path": "ansible"
        },
        "executionEnvironment": {
          "enabled": false
        },
        "python": {
          "interpreterPath": "python3"
        },
        "validation": {
          "enabled": true,
          "lint": {
            "enabled": true,
            "path": "ansible-lint"
          }
        }
      }
    },
    "gopls": {
      "initialization_options": {
        "gofumpt": true,
        "usePlaceholders": false,
        "completeUnimported": true,
        "staticcheck": true,
        "semanticTokens": true,
        "directoryFilters": ["-.git", "-.vscode", "-.idea", "-.vscode-test", "-node_modules"],
        "experimentalPostfixCompletions": true,
        "codelenses": {
          "gc_details": false,
          "generate": true,
          "regenerate_cgo": true,
          "run_govulncheck": true,
          "test": true,
          "tidy": true,
          "upgrade_dependency": true,
          "vendor": true
        },
        "hints": {
          "assignVariableTypes": true,
          "compositeLiteralFields": true,
          "compositeLiteralTypes": true,
          "constantValues": true,
          "functionTypeParameters": true,
          "parameterNames": true,
          "rangeVariableTypes": true
        },
        "analyses": {
          "nilness": true,
          "unusedparams": true,
          "unusedwrite": true,
          "useany": true
        }
      }
    },
    // NOTE: https://github.com/j4ng5y/zed_golangci_lint/issues/2#issuecomment-2338077672
    // this is needed until maintainers merge the outstanding PRs
    "golangci-lint": {
      "settings": {
        "filetypes": ["go"]
      },
      "initialization_options": {
        "command": ["golangci-lint", "run", "--out-format", "json", "--issues-exit-code=1"]
      }
    }
  },
  "languages": {
    "Python": {
      "format_on_save": "on",
      "formatter": [
        {
          "external": {
            "command": "bash",
            "arguments": ["-c", "ruff check --select=I --fix --stdin-filename {buffer_path} | ruff format --stdin-filename {buffer_path}"]
          }
        }
      ],
      "language_servers": ["!pyright", "basedpyright", "ruff"]
    },
    "JavaScript": {
      "code_actions_on_format": {
        "source.fixAll.eslint": true
      }
    },
    "Go": {
      "format_on_save": "on",
      "code_actions_on_format": {
        "source.organizeImports": true
      },
      // TODO: golangci-lint quite buggy
      "language_servers": ["gopls", "golangci-lint"]
      // "language_servers": ["gopls"]
    }
  },
  "jupyter": {
    "kernel_selections": {
      "typescript": "deno",
      "javascript": "deno",
      "python": "python3"
    }
  },
  "auto_install_extensions": {
    "ansible": true,
    "basedpyright": true,
    "basher": true,
    "catppuccin": true,
    "csv": true,
    "docker-compose": true,
    "dockerfile": true,
    "env": true,
    "fish": true,
    "git-firefly": true,
    "html": true,
    "latex": true,
    "log": true,
    "lua": true,
    "make": true,
    "markdown-oxide": true,
    "nginx": true,
    "nix": true,
    "prisma": true,
    "ruff": true,
    "scheme": true,
    "sql": true,
    "terraform": true,
    "tokyo-night": true,
    "toml": true,
    "typos": true,
    "vscode-icons": true,
    "wakatime": true,
    "zig": true
  }
}
