[
  {
    "context": "Dock",
    "bindings": {
      "ctrl-w h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-w l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-w k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-w j": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  {
    // put key-bindings here if you want them to work in normal & visual mode
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"],
      "space l a": "editor::ToggleCodeActions",
      "space s s": "outline::Toggle",
      "space T b": "editor::ToggleGitBlame",
      "j": [
        "vim::Down",
        {
          "displayLines": true
        }
      ],
      "k": [
        "vim::Up",
        {
          "displayLines": true
        }
      ],
      "enter": "editor::SelectLargerSyntaxNode",
      "backspace": "editor::SelectSmallerSyntaxNode"
    }
  },
  {
    // put key-bindings here if you want them to work only in normal mode
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      "g r": "editor::FindAllReferences"
    }
  },
  {
    "context": "Editor && vim_mode == normal && (vim_operator == none || vim_operator == n) && !VimWaiting",
    "bindings": {
      "space w": "workspace::Save",
      "Q": "pane::CloseActiveItem"
    }
  },
  {
    "context": "Editor && showing_completions",
    "bindings": {
      "enter": "editor::ConfirmCompletion",
      "ctrl-j": "editor::ConfirmCompletion",
      "shift-tab": "editor::ContextMenuPrev",
      "tab": "editor::ContextMenuNext"
    }
  },
  {
    "context": "Editor && mode == full && inline_completion",
    "bindings": {
      "tab": "editor::NextInlineCompletion",
      "shift-tab": "editor::PreviousInlineCompletion",
      "enter": "editor::AcceptPartialInlineCompletion",
      "ctrl-j": "editor::AcceptInlineCompletion"
    }
  },
  {
    // put key-bindings here if you want them to work in insert mode
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      "tab": "menu::SelectNext",
      "shift-tab": "menu::SelectPrev"
    }
  },
  {
    "context": "Dock",
    "bindings": {
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  {
    // Vim: File Tree ("ProjectPanel") actions
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "h": "project_panel::CollapseSelectedEntry",
      "l": "project_panel::ExpandSelectedEntry",
      "j": "menu::SelectNext",
      "k": "menu::SelectPrev",
      "o": "menu::Confirm",
      "r": "project_panel::Rename",
      "z c": "project_panel::CollapseSelectedEntry",
      "z o": "project_panel::ExpandSelectedEntry",
      "shift-o": "project_panel::RevealInFinder",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      "d": "project_panel::Delete",
      "a": "project_panel::NewFile",
      "shift-a": "project_panel::NewDirectory",
      "shift-y": "project_panel::CopyRelativePath",
      "g y": "project_panel::CopyPath"
    }
  },
  {
    "context": "OutlinePanel",
    "bindings": {
      "j": "menu::SelectNext",
      "k": "menu::SelectPrev",
      "h": "outline_panel::CollapseSelectedEntry",
      "l": "outline_panel::ExpandSelectedEntry",
      "o": "outline_panel::Open",
      "enter": "outline_panel::Open"
    }
  },
  {
    "context": "EmptyPane || SharedScreen || vim_operator == none && !VimWaiting && vim_mode != insert",
    "bindings": {
      "space s p": "projects::OpenRecent",
      "space t l": "task::Rerun"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !VimObject",
    "bindings": {
      "shift-s": [
        "vim::PushOperator",
        {
          "AddSurrounds": {}
        }
      ]
    }
  }
]
