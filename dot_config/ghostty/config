# vim: ft=conf

macos-non-native-fullscreen = true

font-family = Fira Code
font-size = 13
font-feature = +ss02
font-feature = +ss03
font-feature = +ss05
font-feature = +ss07
font-thicken = true

macos-option-as-alt = left

# Opacity of split windows
unfocused-split-opacity = 0.8

theme = catppuccin-mocha

shell-integration-features = no-cursor,no-sudo

# title = "Ghostty ðŸ‘»"

cursor-style-blink = false
mouse-hide-while-typing = true

keybind = ctrl+h=goto_split:left
keybind = ctrl+j=goto_split:bottom
keybind = ctrl+k=goto_split:top
keybind = ctrl+l=goto_split:right

# Key bindings. The format is `trigger=action`. Duplicate triggers will
# overwrite previously set values.
#
# Trigger: `+`-separated list of keys and modifiers. Example: `ctrl+a`,
# `ctrl+shift+b`, `up`. Some notes:
#
#   * modifiers cannot repeat, `ctrl+ctrl+a` is invalid.
#
#   * modifiers and keys can be in any order, `shift+a+ctrl` is *weird*,
#     but valid.
#
#   * only a single key input is allowed, `ctrl+a+b` is invalid.
#
# Valid modifiers are `shift`, `ctrl` (alias: `control`), `alt` (alias: `opt`,
# `option`), and `super` (alias: `cmd`, `command`). You may use the modifier
# or the alias. When debugging keybinds, the non-aliased modifier will always
# be used in output.
#
# Action is the action to take when the trigger is satisfied. It takes the
# format `action` or `action:param`. The latter form is only valid if the
# action requires a parameter.
#
#   * `ignore` - Do nothing, ignore the key input. This can be used to
#     black hole certain inputs to have no effect.
#
#   * `unbind` - Remove the binding. This makes it so the previous action
#     is removed, and the key will be sent through to the child command
#     if it is printable.
#
#   * `csi:text` - Send a CSI sequence. i.e. `csi:A` sends "cursor up".
#
#   * `esc:text` - Send an escape sequence. i.e. `esc:d` deletes to the
#     end of the word to the right.
#
#   * `text:text` - Send a string. Uses Zig string literal syntax.
#     i.e. `text:\x15` sends Ctrl-U.
#
# Some notes for the action:
#
#   * The parameter is taken as-is after the `:`. Double quotes or
#     other mechanisms are included and NOT parsed. If you want to
#     send a string value that includes spaces, wrap the entire
#     trigger/action in double quotes. Example: `--keybind="up=csi:A B"`
#
# There are some additional special values that can be specified for
# keybind:
#
#   * `keybind=clear` will clear all set keybindings. Warning: this
#     removes ALL keybindings up to this point, including the default
#     keybindings.
keybind = super+alt+right=goto_split:right
keybind = super+plus=increase_font_size:1
keybind = super+d=new_split:right
keybind = super+physical:six=goto_tab:6
keybind = super+comma=open_config
keybind = super+physical:four=goto_tab:4
keybind = super+shift+j=write_scrollback_file
keybind = super+physical:nine=goto_tab:9
keybind = super+enter=toggle_fullscreen
keybind = super+shift+enter=toggle_split_zoom
keybind = super+q=quit
keybind = super+page_down=scroll_page_down
keybind = super+end=scroll_to_bottom
keybind = super+k=clear_screen
keybind = super+left_bracket=goto_split:previous
keybind = super+shift+right_bracket=next_tab
keybind = super+shift+comma=reload_config
keybind = super+shift+left_bracket=previous_tab
keybind = super+right_bracket=goto_split:next
keybind = super+v=paste_from_clipboard
keybind = super+alt+down=goto_split:bottom
keybind = super+equal=increase_font_size:1
keybind = super+shift+up=jump_to_prompt:-1
keybind = super+n=new_window
keybind = super+ctrl+up=resize_split:up,10
keybind = super+ctrl+left=resize_split:left,10
keybind = super+ctrl+right=resize_split:right,10
keybind = super+ctrl+f=toggle_fullscreen
keybind = super+alt+shift+w=close_all_windows
keybind = super+physical:three=goto_tab:3
keybind = super+t=new_tab
keybind = super+page_up=scroll_page_up
keybind = super+shift+d=new_split:down
keybind = super+zero=reset_font_size
keybind = super+physical:five=goto_tab:5
keybind = super+a=select_all
keybind = super+physical:seven=goto_tab:7
keybind = super+ctrl+down=resize_split:down,10
keybind = super+alt+up=goto_split:top
keybind = super+physical:two=goto_tab:2
keybind = super+w=close_surface
keybind = super+minus=decrease_font_size:1
keybind = super+shift+down=jump_to_prompt:1
keybind = super+physical:eight=goto_tab:8
keybind = super+alt+left=goto_split:left
keybind = super+home=scroll_to_top
keybind = alt+shift+equal=equalize_splits
keybind = super+physical:one=goto_tab:1
keybind = super+shift+w=close_window
keybind = super+c=copy_to_clipboard
keybind = super+alt+i=inspector:toggle

# remap cmd+p to ctrl+p
keybind = super+p=text:\x10
# remap cmd+s to ctrl+s
keybind = super+s=text:\x13
