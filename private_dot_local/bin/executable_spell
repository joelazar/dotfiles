#!/bin/bash

spell() {
	local candidates oldifs word array_pos
	oldifs="$IFS"
	IFS=':'

	# Parse the apsell format and return a list of ":" separated words
	read -a candidates <<<"$(printf "%s\n" "$1" |
		aspell -a |
		awk -F':' '/^&/ {
            split($2, a, ",")
            result=""
            for (x in a) {
                gsub(/^[ \t]/, "", a[x])
                result = a[x] ":" result
            }
            gsub(/:$/, "", result)
            print result
        }')"

	# Reverse number and print the parsed bash array because the list comes
	# out of gawk backwards
	for item in "${candidates[@]}"; do
		printf '%s\n' "$item"
	done |
		tac |
		nl |
		less -FirSX

	printf "[ $(tput setaf 2)?$(tput sgr0) ]\t%s" \
		'Enter the choice (empty to cancel, 0 for input): '
	read -r index

	[[ -z "$index" ]] && return
	[[ "$index" == 0 ]] && word="$1"

	[[ -z "$word" ]] && {
		array_pos=$((${#candidates[@]} - index))
		word="${candidates[$array_pos]}"
	}

	[[ -n "$word" ]] && {
		echo -n "$word" | wl-copy
		printf "Copied '%s' to clipboard!\n" "$word"
	} || printf "[ $(tput setaf 1):($(tput sgr0) ] %s\n" 'No match found'

	IFS="$oldifs"
}

spell "$@"
